// Generated by view binder compiler. Do not edit!
package com.ramitas.practica3app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ramitas.practica3app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button addUserButton;

  @NonNull
  public final TextView adminText;

  @NonNull
  public final Button deleteUserButton;

  @NonNull
  public final Button logoutButton;

  @NonNull
  public final Button viewRecordsButton;

  private ActivityAdminBinding(@NonNull FrameLayout rootView, @NonNull Button addUserButton,
      @NonNull TextView adminText, @NonNull Button deleteUserButton, @NonNull Button logoutButton,
      @NonNull Button viewRecordsButton) {
    this.rootView = rootView;
    this.addUserButton = addUserButton;
    this.adminText = adminText;
    this.deleteUserButton = deleteUserButton;
    this.logoutButton = logoutButton;
    this.viewRecordsButton = viewRecordsButton;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addUserButton;
      Button addUserButton = ViewBindings.findChildViewById(rootView, id);
      if (addUserButton == null) {
        break missingId;
      }

      id = R.id.adminText;
      TextView adminText = ViewBindings.findChildViewById(rootView, id);
      if (adminText == null) {
        break missingId;
      }

      id = R.id.deleteUserButton;
      Button deleteUserButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteUserButton == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      Button logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.viewRecordsButton;
      Button viewRecordsButton = ViewBindings.findChildViewById(rootView, id);
      if (viewRecordsButton == null) {
        break missingId;
      }

      return new ActivityAdminBinding((FrameLayout) rootView, addUserButton, adminText,
          deleteUserButton, logoutButton, viewRecordsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
