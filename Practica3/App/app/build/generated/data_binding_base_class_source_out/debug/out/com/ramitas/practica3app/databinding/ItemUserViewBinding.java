// Generated by view binder compiler. Do not edit!
package com.ramitas.practica3app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ramitas.practica3app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemUserViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView userEmailTextView;

  @NonNull
  public final TextView userIdTextView;

  @NonNull
  public final TextView userNameTextView;

  @NonNull
  public final ImageView userProfileImageView;

  @NonNull
  public final TextView userRoleTextView;

  private ItemUserViewBinding(@NonNull LinearLayout rootView, @NonNull TextView userEmailTextView,
      @NonNull TextView userIdTextView, @NonNull TextView userNameTextView,
      @NonNull ImageView userProfileImageView, @NonNull TextView userRoleTextView) {
    this.rootView = rootView;
    this.userEmailTextView = userEmailTextView;
    this.userIdTextView = userIdTextView;
    this.userNameTextView = userNameTextView;
    this.userProfileImageView = userProfileImageView;
    this.userRoleTextView = userRoleTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemUserViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemUserViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_user_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemUserViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.userEmailTextView;
      TextView userEmailTextView = ViewBindings.findChildViewById(rootView, id);
      if (userEmailTextView == null) {
        break missingId;
      }

      id = R.id.userIdTextView;
      TextView userIdTextView = ViewBindings.findChildViewById(rootView, id);
      if (userIdTextView == null) {
        break missingId;
      }

      id = R.id.userNameTextView;
      TextView userNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (userNameTextView == null) {
        break missingId;
      }

      id = R.id.userProfileImageView;
      ImageView userProfileImageView = ViewBindings.findChildViewById(rootView, id);
      if (userProfileImageView == null) {
        break missingId;
      }

      id = R.id.userRoleTextView;
      TextView userRoleTextView = ViewBindings.findChildViewById(rootView, id);
      if (userRoleTextView == null) {
        break missingId;
      }

      return new ItemUserViewBinding((LinearLayout) rootView, userEmailTextView, userIdTextView,
          userNameTextView, userProfileImageView, userRoleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
